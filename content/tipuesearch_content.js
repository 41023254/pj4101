var tipuesearch = {"pages": [{'title': 'About', 'text': '\n \n  2023 專題第一組\n  \n \n \n \n  題目:\n  \n \n \n 網際機械手臂運動控制與模擬\n \n \n Web-based Motion Control and Simulation of Robotic Arm\n \n \n \n  members:\n  \n \n \n 41023218陳岳檉 snowfall-killer\n \n \n 41023248蔡弦霖 smart-777\n \n \n 41023251鄭立揚 sdegbsvrtg\n \n \n 41023254謝鴻元 41023254\n \n \n \n \n repository:\n  \n  https://github.com/mdecycu/pj4101\n  \n \n \n githubpage:\n  \n \n \n    http://mde.tw/pj4101\n    \n \n \n \n \n \n  Teams 410專題\n  \n', 'tags': '', 'url': 'About.html'}, {'title': '網際 Robot', 'text': '\n 利用 WebGL、Javascript 與零組件的 STL 檔案格式, 可以直接在瀏覽器中顯示機械臂與工作場景, 如下列連結所示:\n \n \n \n  pick_and_place_robodk_web.html\n  \n \n \n 其中直接使用\n  \n  https://github.com/toji/gl-matrix\n  \n , 並透過類似\n  \n  https://github.com/AlmondFlour/WebGL-Robot/blob/master/webgl-utils.js\n  \n 的工具程式, 完成 3D 零組件場景的展示.\n \n \n 從\n  \n  https://github.com/mdecycu/WebGL-Robot\n  \n 可知透過 Javascript 程式能夠控制瀏覽器中機械臂與各 3D 零件的位置及方位.\n \n \n 且從最上方取自 RoboDK Web server 所送出的機械臂工作場景, 可以發現是採用 Websocket 由伺服器送出控制機械臂的變數值, 以便進行遠端操控模擬.\n \n \n 因此, 若能使用 Python + Flask 建立送出控制訊號的 Websocket, 來控制 WebGL 展示的機械臂工作場景, 便可將近端模擬的流程擴大到全球資訊網中, 以作為協同產品設計中的一個系統模擬環節.\n \n \n 一旦上述各項測試完成, 即可接續完成:\n \n \n 網際機械手臂運動控制與模擬\n \n \n Web-based Motion Control and Simulation of Robotic Arm\n \n \n 參考資料:\n \n \n \n  Javascript Syntax Quick Reference\n  \n (需要下載密碼)\n \n \n \n  Beginning WebGL for HTML\n  \n (需要下載密碼)\n \n \n \n  Interactive Computer Graphics\n  \n (WebGL, 需要下載密碼)\n \n \n \n  2003 A Web-based Robotic Design and Simulation System in Java 3D\n  \n \n \n \n  2022 Assembly: A Web-Based Multi-Robot Programming and Simulation Tool\n  \n', 'tags': '', 'url': '網際 Robot.html'}, {'title': 'Brython', 'text': '\n cmsite: wcms use\n  \n  https://github.com/mdecycu/cmsimde\n  \n as submodule\n \n \n \n  https://en.wikipedia.org/wiki/Python_(programming_language)\n  \n \n \n Examples:\n \n \n \n  https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d\n  \n \n \n \n  https://www.geeksforgeeks.org/python-programming-examples/\n  \n \n \n \n  https://www.programiz.com/python-programming/examples\n  \n \n \n \n  https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/\n  \n \n \n Python Tutorial:\n \n \n \n  https://docs.python.org/3/tutorial/\n  \n \n \n \n  An informal introduction to Python\n  \n \n \n Indentation\n \n \n Variables\n \n \n Comments\n \n \n \n  Numbers\n  \n \n \n \n  Strings\n  \n \n \n print\n \n \n \n  Python control flow tools\n  \n \n \n \n  for\n  \n \n \n \n  if\n  \n \n \n \n  range\n  \n \n \n open\n \n \n read\n \n \n \n  lists\n  \n \n \n \n  tuples\n  \n \n \n \n  dictionaries\n  \n \n \n \n  functions\n  \n \n \n \n  try ... except\n  \n \n \n \n  break\n  \n \n \n \n  pass\n  \n \n \n \n  classes\n  \n \n \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (\n  \n  practice_html.txt\n  \n 動態頁面超文件).\n \n \n \n  practice_html.txt\n  \n 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.\n \n \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為\n  \n  class\n  \n 後, 在範例導入時透過\n  \n  instance\n  \n 引用.\n \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n \n 從 1 累加到 100:\n \n \n \n  1 add to 100\n  \n \n \n 將 iterable 與 iterator\n  \n  相關說明\n  \n , 利用 Brython 與 Ace Editor 整理在這個頁面.\n \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n \n  add 1 to 100 結束 \n \n  editor1 開始  \n \n  用來顯示程式碼的 editor 區域  \n \n \n \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n \n \n  存擋表單開始  \n \n \n \n  Filename:\n   \n  .py\n  \n \n \n \n  存擋表單結束  \n \n \n \n \n  執行與清除按鈕開始  \n \n \n \n  Run\n  \n \n  Output\n  \n \n  清除輸出區\n  \n \n  清除繪圖區\n  \n \n  Reload\n  \n \n \n  執行與清除按鈕結束  \n \n \n \n \n  程式執行 ouput 區  \n \n \n \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n \n  editor1 結束  \n \n  ##########################################  \n \n 從 1 累加到 100 part2:\n \n \n \n  1 add to 100\n  \n \n  cango_three_gears\n  \n \n  BSnake\n  \n \n  AI Tetris\n  \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n  add 1 to 100 part2 開始  \n \n \n \n  add 1 to 100 part2 結束 \n \n  editor2 開始  \n \n  用來顯示程式碼的 editor 區域  \n \n \n \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n \n \n  存擋表單開始  \n \n \n \n  Filename:\n   \n  .py\n  \n \n \n \n  存擋表單結束  \n \n \n \n \n  執行與清除按鈕開始  \n \n \n \n  Run\n  \n \n  Output\n  \n \n  清除輸出區\n  \n \n  清除繪圖區\n  \n \n  Reload\n  \n \n \n  執行與清除按鈕結束  \n \n \n \n \n  程式執行 ouput 區  \n \n \n \n \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n \n \n  editor2 結束  \n', 'tags': '', 'url': 'Brython.html'}]};