<h1>
 About
</h1>
<p>
 <strong>
  2023 專題第一組
 </strong>
</p>
<p>
 <strong>
 </strong>
</p>
<p>
 <strong>
  members:
 </strong>
</p>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
 41023218陳岳檉 snowfall-killer
</div>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
 41023248蔡弦霖 smart-777
</div>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
 41023251鄭立揚 sdegbsvrtg
</div>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
 41023254謝鴻元 41023254
</div>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
</div>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
 repository:
 <a href="https://github.com/mdecycu/pj4101">
  https://github.com/mdecycu/pj4101
 </a>
</div>
<div dir="auto" style="color: #222222; font-family: Arial, Helvetica, sans-serif; font-size: small; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;">
 githubpage:
 <span class="CheckStep-line-content d-inline-block flex-auto ml-3 js-check-line-content">
  <span class="">
   <a href="http://mde.tw/pj4101/" rel="noopener noreferrer" target="_blank">
    http://mde.tw/pj4101
   </a>
  </span>
 </span>
</div>
<p>
 <a href="https://teams.microsoft.com/_?lm=deeplink&amp;lmsrc=NeutralHomePageWeb&amp;cmpid=WebSignIn&amp;culture=zh-tw&amp;country=tw#/school/conversations/410%20%E5%B0%88%E9%A1%8C?threadId=19:b2f79d6bbc35407daab5d08774581bd0@thread.tacv2&amp;ctx=channel">
  Teams 410專題
 </a>
</p>
<h2>
 網際 Robot
</h2>
<p>
 利用 WebGL、Javascript 與零組件的 STL 檔案格式, 可以直接在瀏覽器中顯示機械臂與工作場景, 如下列連結所示:
</p>
<p>
 <a href="/downloads/pick_and_place_robodk_web.html">
  pick_and_place_robodk_web.html
 </a>
</p>
<p>
 其中直接使用
 <a href="https://github.com/toji/gl-matrix">
  https://github.com/toji/gl-matrix
 </a>
 , 並透過類似
 <a href="https://github.com/AlmondFlour/WebGL-Robot/blob/master/webgl-utils.js">
  https://github.com/AlmondFlour/WebGL-Robot/blob/master/webgl-utils.js
 </a>
 的工具程式, 完成 3D 零組件場景的展示.
</p>
<p>
 從
 <a href="https://github.com/mdecycu/WebGL-Robot">
  https://github.com/mdecycu/WebGL-Robot
 </a>
 可知透過 Javascript 程式能夠控制瀏覽器中機械臂與各 3D 零件的位置及方位.
</p>
<p>
 且從最上方取自 RoboDK Web server 所送出的機械臂工作場景, 可以發現是採用 Websocket 由伺服器送出控制機械臂的變數值, 以便進行遠端操控模擬.
</p>
<p>
 因此, 若能使用 Python + Flask 建立送出控制訊號的 Websocket, 來控制 WebGL 展示的機械臂工作場景, 便可將近端模擬的流程擴大到全球資訊網中, 以作為協同產品設計中的一個系統模擬環節.
</p>
<p>
 一旦上述各項測試完成, 即可接續完成:
</p>
<p>
 網際機械手臂運動控制與模擬
</p>
<p>
 Web-based Motion Control and Simulation of Robotic Arm
</p>
<p>
 參考資料:
</p>
<p style="padding-left: 30px;">
 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EacZ6WVokl5FlVIVoqmjQrcBJwkjeDk_UP23mx-yRx16Pg?e=UCpwMW">
  Javascript Syntax Quick Reference
 </a>
 (需要下載密碼)
</p>
<p style="padding-left: 30px;">
 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/EZbaLK9xqwlLia7lHthgyjIBTb6IE_ywffMbJMp34wv6kw?e=Cg7OlT">
  Beginning WebGL for HTML
 </a>
 (需要下載密碼)
</p>
<p style="padding-left: 30px;">
 <a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/yen_nfu_edu_tw/ERsS_eikZsxKo51dFT9OZ0YBSsEHeOHcBZjMyIioC-zhnA?e=tizzFb">
  Interactive Computer Graphics
 </a>
 (WebGL, 需要下載密碼)
</p>
<p style="padding-left: 30px;">
 <a href="https://www.researchgate.net/publication/285582243_A_Web-based_Robotic_Design_and_Simulation_System_in_Java_3D">
  2003 A Web-based Robotic Design and Simulation System in Java 3D
 </a>
</p>
<p style="padding-left: 30px;">
 <a href="https://www.sciencedirect.com/science/article/pii/S2405896322002130">
  2022 Assembly: A Web-Based Multi-Robot Programming and Simulation Tool
 </a>
</p>
<h1>
 Brython
</h1>
<p>
 cmsite: wcms use
 <a href="https://github.com/mdecycu/cmsimde">
  https://github.com/mdecycu/cmsimde
 </a>
 as submodule
</p>
<p>
 <a href="https://en.wikipedia.org/wiki/Python_(programming_language)">
  https://en.wikipedia.org/wiki/Python_(programming_language)
 </a>
</p>
<h4>
 Examples:
</h4>
<p style="padding-left: 30px;">
 <a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">
  https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d
 </a>
</p>
<p style="padding-left: 30px;">
 <a href="https://www.geeksforgeeks.org/python-programming-examples/">
  https://www.geeksforgeeks.org/python-programming-examples/
 </a>
</p>
<p style="padding-left: 30px;">
 <a href="https://www.programiz.com/python-programming/examples">
  https://www.programiz.com/python-programming/examples
 </a>
</p>
<p style="padding-left: 30px;">
 <a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">
  https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/
 </a>
</p>
<h4>
 Python Tutorial:
</h4>
<p style="padding-left: 30px;">
 <a href="https://docs.python.org/3/tutorial/">
  https://docs.python.org/3/tutorial/
 </a>
</p>
<p style="padding-left: 30px;">
 <a href="https://docs.python.org/3/tutorial/introduction.html">
  An informal introduction to Python
 </a>
</p>
<h4>
 Indentation
</h4>
<h4>
 Variables
</h4>
<h4>
 Comments
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/introduction.html#numbers">
  Numbers
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/introduction.html#strings">
  Strings
 </a>
</h4>
<h4>
 print
</h4>
<p>
 <a href="https://docs.python.org/3/tutorial/controlflow.html">
  Python control flow tools
 </a>
</p>
<h4 style="padding-left: 30px;">
 <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">
  for
 </a>
</h4>
<h4 style="padding-left: 30px;">
 <a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">
  if
 </a>
</h4>
<h4 style="padding-left: 30px;">
 <a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">
  range
 </a>
</h4>
<h4>
 open
</h4>
<h4>
 read
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/introduction.html#lists">
  lists
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">
  tuples
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">
  dictionaries
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">
  functions
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/errors.html#exceptions">
  try ... except
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">
  break
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">
  pass
 </a>
</h4>
<h4>
 <a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">
  classes
 </a>
</h4>
<p>
 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (
 <a href="/downloads/practice_html.txt">
  practice_html.txt
 </a>
 動態頁面超文件).
</p>
<p>
 <a href="/downloads/practice_html.txt">
  practice_html.txt
 </a>
 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.
</p>
<p>
 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為
 <a href="https://docs.python.org/3/tutorial/classes.html">
  class
 </a>
 後, 在範例導入時透過
 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">
  instance
 </a>
 引用.
</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>
 從 1 累加到 100:
</p>
<p>
 <button id="add1to100">
  1 add to 100
 </button>
</p>
<p>
 將 iterable 與 iterator
 <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">
  相關說明
 </a>
 , 利用 Brython 與 Ace Editor 整理在這個頁面.
</p>
<!-- 導入 brython 程式庫 -->
<p>
 <script src="/static/brython.js">
 </script>
 <script src="/static/brython_stdlib.js">
 </script>
</p>
<!-- 啟動 Brython -->
<p>
 <script>
  window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
 </script>
</p>
<p>
 <!-- 導入 FileSaver 與 filereader -->
</p>
<p>
 <script src="/static/ace/FileSaver.min.js" type="text/javascript">
 </script>
 <script src="/static/ace/filereader.js" type="text/javascript">
 </script>
</p>
<p>
 <!-- 導入 ace -->
</p>
<p>
 <script src="/static/ace/ace.js" type="text/javascript">
 </script>
 <script src="/static/ace/ext-language_tools.js" type="text/javascript">
 </script>
 <script src="/static/ace/mode-python3.js" type="text/javascript">
 </script>
 <script src="/static/ace/snippets/python.js" type="text/javascript">
 </script>
</p>
<p>
 <!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
 <script src="/static/Cango-24v03-min.js">
 </script>
 <script src="/static/gearUtils-09.js">
 </script>
 <script src="/static/SVGpathUtils-6v03-min.js">
 </script>
 <script src="/static/sylvester.js">
 </script>
 <script src="/static/PrairieDraw.js">
 </script>
</p>
<p>
 <!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱-->
</p>
<p>
 <script type="text/javascript">
  function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
 </script>
</p>
<p>
 <script type="text/python3">
  from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
 </script>
</p>
<p>
 <!-- add 1 to 100 開始 -->
 <script type="text/python3">
  from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
 </script>
</p>
<p>
 <!-- add 1 to 100 結束-->
</p>
<!-- editor1 開始 -->
<p>
 <!-- 用來顯示程式碼的 editor 區域 -->
</p>
<div id="kw_editor1" style="width: 600px; height: 300px;">
</div>
<p>
 <!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 -->
</p>
<p>
 <!-- 存擋表單開始 -->
</p>
<form>
 <label>
  Filename:
  <input id="kw_filename" placeholder="input file name" type="text"/>
  .py
 </label>
 <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/>
</form>
<p>
 <!-- 存擋表單結束 -->
</p>
<p>
</p>
<p>
 <!-- 執行與清除按鈕開始 -->
</p>
<p>
 <button id="kw_run1">
  Run
 </button>
 <button id="kw_show_console1">
  Output
 </button>
 <button id="kw_clear_console1">
  清除輸出區
 </button>
 <button id="clear_bd1">
  清除繪圖區
 </button>
 <button onclick="window.location.reload()">
  Reload
 </button>
</p>
<p>
 <!-- 執行與清除按鈕結束 -->
</p>
<p>
</p>
<p>
 <!-- 程式執行 ouput 區 -->
</p>
<div style="width: 100%; height: 100%;">
 <textarea autocomplete="off" id="kw_console1"></textarea>
</div>
<p>
 <!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 -->
</p>
<div id="brython_div1">
</div>
<!-- editor1 結束 -->
<hr/>
<!-- ########################################## -->
<p>
 從 1 累加到 100 part2:
</p>
<p>
 <button id="add1to100part2">
  1 add to 100
 </button>
 <button id="cango_three_gears">
  cango_three_gears
 </button>
 <button id="bsnake">
  BSnake
 </button>
 <button id="aitetris">
  AI Tetris
 </button>
</p>
<p>
 <!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱-->
</p>
<p>
 <script type="text/python3">
  from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
 </script>
</p>
<p>
 <!-- add 1 to 100 part2 開始 -->
 <script type="text/python3">
  from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
 </script>
</p>
<p>
 <!-- add 1 to 100 part2 結束-->
</p>
<!-- editor2 開始 -->
<p>
 <!-- 用來顯示程式碼的 editor 區域 -->
</p>
<div id="kw_editor2" style="width: 600px; height: 300px;">
</div>
<p>
 <!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 -->
</p>
<p>
 <!-- 存擋表單開始 -->
</p>
<form>
 <label>
  Filename:
  <input id="kw_filename2" placeholder="input file name" type="text"/>
  .py
 </label>
 <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/>
</form>
<p>
 <!-- 存擋表單結束 -->
</p>
<p>
</p>
<p>
 <!-- 執行與清除按鈕開始 -->
</p>
<p>
 <button id="kw_run2">
  Run
 </button>
 <button id="kw_show_console2">
  Output
 </button>
 <button id="kw_clear_console2">
  清除輸出區
 </button>
 <button id="clear_bd2">
  清除繪圖區
 </button>
 <button onclick="window.location.reload()">
  Reload
 </button>
</p>
<p>
 <!-- 執行與清除按鈕結束 -->
</p>
<p>
</p>
<p>
 <!-- 程式執行 ouput 區 -->
</p>
<div style="width: 100%; height: 100%;">
 <textarea autocomplete="off" id="kw_console2"></textarea>
</div>
<p>
 <!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 -->
</p>
<div id="brython_div2">
</div>
<!-- editor2 結束 -->
<hr/>
